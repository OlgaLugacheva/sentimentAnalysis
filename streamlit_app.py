import streamlit as st
import requests
import pandas as pd
from io import BytesIO

st.title("üìä –ê–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤ (—á–µ—Ä–µ–∑ API)")

API_TEXT_URL = "http://localhost:8000/predict"
API_CSV_URL = "http://localhost:8000/predict-csv"

tab1, tab2 = st.tabs(["–û–¥–∏–Ω –æ—Ç–∑—ã–≤", "CSV-—Ñ–∞–π–ª"])

with tab1:
    text = st.text_area("–í–≤–µ–¥–∏—Ç–µ –æ—Ç–∑—ã–≤", height=150)
    if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", key="text_analysis"):
        if not text.strip():
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.")
        else:
            try:
                response = requests.post(API_TEXT_URL, json={"text": text})
                if response.status_code == 200:
                    result = response.json()
                    st.success(f"–¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: **{result['sentiment']}**")
                else:
                    st.error(f"–û—à–∏–±–∫–∞ API: {response.status_code}")
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API: {e}")

with tab2:
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–æ–π 'Text'", type=["csv"])
    if uploaded_file is not None:
        if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å CSV", key="csv_analysis"):
            try:
                files = {"file": (uploaded_file.name, uploaded_file.getvalue(), "text/csv")}
                response = requests.post(API_CSV_URL, files=files)

                if response.status_code == 200:
                    df_result = pd.read_csv(BytesIO(response.content))
                    st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω.")
                    st.dataframe(df_result)

                    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                    csv_download = df_result.to_csv(index=False).encode("utf-8")
                    st.download_button("üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç CSV", csv_download, file_name="result.csv", mime="text/csv")
                else:
                    st.error(f"–û—à–∏–±–∫–∞ API: {response.status_code}")
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
